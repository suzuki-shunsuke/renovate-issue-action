"use strict";(self.webpackChunkrenovate_issue_action=self.webpackChunkrenovate_issue_action||[]).push([[859],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),u=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=u(e.components);return a.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),d=i,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||r;return t?a.createElement(m,o(o({ref:n},l),{},{components:t})):a.createElement(m,o({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3737:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return f}});var a=t(7462),i=t(3366),r=(t(7294),t(3905)),o=["components"],s={sidebar_position:100},c="Configuration file",u={unversionedId:"config/config-file",id:"config/config-file",title:"Configuration file",description:"Configuration file is optional.",source:"@site/docs/config/config-file.md",sourceDirName:"config",slug:"/config/config-file",permalink:"/renovate-issue-action/config/config-file",editUrl:"https://github.com/suzuki-shunsuke/renovate-issue-action-docs/edit/main/docs/config/config-file.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/renovate-issue-action/config/"},next:{title:"Template",permalink:"/renovate-issue-action/config/template"}},l={},f=[],p={toc:f};function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration-file"},"Configuration file"),(0,r.kt)("p",null,"Configuration file is optional.\nBy default, the file ",(0,r.kt)("inlineCode",{parentName:"p"},"^\\.renovate-issue-action\\.ya?ml$")," in the current directory is read if it exists.\nYou can specify configuration file path with the command line option ",(0,r.kt)("inlineCode",{parentName:"p"},"--config, -c"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ renovate-issue-action --config config.yaml\n")),(0,r.kt)("p",null,"e.g. renovate-issue-action.yaml"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'renovate_login: \'renovate[bot]\' # By default, \'renovate[bot]\'\nissue:\n  repo_owner: suzuki-shunsuke # By default, the repository which GitHub Actions is run\n  repo_name: renovate-issue-action # By default, the repository which GitHub Actions is run\n  title: \'Renovate Automerge Failure({{.RepoOwner}}/{{.RepoName}}): {{if .Metadata.GroupName}}{{.Metadata.GroupName}}{{else}}{{.Metadata.PackageName}}{{.Metadata.DepName}}{{end}} {{if .Metadata.PackageFileDir}}({{.Metadata.PackageFileDir}}){{end}}\'\n  description_header: |\n    _This pull request was created by [renovate-issue-action](https://github.com/suzuki-shunsuke/renovate-issue-action)._\n\n    :warning: Please don\'t edit the Issue title, because renovate-issue-action searches issue with Issue title.\n\n    {{if .Metadata.PackageName}}packageName: {{.Metadata.PackageName}}{{end}}\n    {{if .Metadata.GroupName}}groupName: {{.Metadata.GroupName}}{{end}}\n    {{if .Metadata.DepName}}depName: {{.Metadata.DepName}}{{end}}\n  description_body: "" # By default, empty\n  assignees: ["suzuki-shunsuke"] # By default, null\n  labels: ["renovate-issue-action"] # By default, null\nentries:\n- if: Metadata.PackageName == "actions/checkout"\n  issue:\n    labels: []\n    assignees: []\n    description_body: |\n      ## What to do\n\n      * Check closed Pull Requests\n      * Fix the problem and update the package\n- if: Metadata.PackageName == "actions/cache"\n  ignore: true # If `ignore` is true, do nothing.\n- if: |\n    "sre" in Labels\n  issue:\n    repo_name: sre-issues\n    addtional_labels: ["sre"]\n    addtional_assignees: ["octocat"]\n')))}d.isMDXComponent=!0}}]);