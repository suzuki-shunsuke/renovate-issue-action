"use strict";(self.webpackChunkrenovate_issue_action=self.webpackChunkrenovate_issue_action||[]).push([[416],{5788:(e,t,n)=>{n.d(t,{Iu:()=>l,yg:()=>y});var i=n(1504);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),c=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return i.createElement(u.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,y=p["".concat(u,".").concat(m)]||p[m]||g[m]||a;return n?i.createElement(y,s(s({ref:t},l),{},{components:n})):i.createElement(y,s({ref:t},l))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9908:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=n(5072),r=(n(1504),n(5788));const a={sidebar_position:1},s="renovate-issue-action",o={unversionedId:"index",id:"index",title:"renovate-issue-action",description:"License",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/renovate-issue-action/",draft:!1,editUrl:"https://github.com/suzuki-shunsuke/renovate-issue-action-docs/edit/main/docs/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Overview",permalink:"/renovate-issue-action/overview"}},u={},c=[{value:"Question (GitHub Discussions)",id:"question-github-discussions",level:2},{value:"Versioning Policy",id:"versioning-policy",level:2},{value:"LICENSE",id:"license",level:2}],l={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,i.c)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"renovate-issue-action"},"renovate-issue-action"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://raw.githubusercontent.com/suzuki-shunsuke/renovate-issue-action/main/LICENSE"},(0,r.yg)("img",{parentName:"a",src:"http://img.shields.io/badge/license-mit-blue.svg?style=flat-square",alt:"License"}))),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/renovate-issue-action"},"https://github.com/suzuki-shunsuke/renovate-issue-action")),(0,r.yg)("p",null,"Create, update, and close GitHub Issues with GitHub Actions according to ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/renovatebot/renovate"},"Renovate")," Pull Requests.\nEspecially, this tool is useful for the usecase which you have to handle a number of Pull Requests automatically and some pull requests can't be merged automatically due to CI failure."),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/170421309-54f362cb-5aa8-4a08-bafd-7c5f22c9b695.png",alt:"image"})),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"overview"},"Overview")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"how-to-use"},"How to use")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"install"},"Install")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"config"},"Configuration")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/suzuki-shunsuke/renovate-issue-action/releases"},"Release Note"))),(0,r.yg)("h2",{id:"question-github-discussions"},"Question (GitHub Discussions)"),(0,r.yg)("p",null,"If you have any question, please create a Discussion. ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/renovate-issue-action/discussions"},"https://github.com/suzuki-shunsuke/renovate-issue-action/discussions")),(0,r.yg)("h2",{id:"versioning-policy"},"Versioning Policy"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/versioning-policy/blob/v0.1.0/POLICY.md"},"suzuki-shunsuke/versioning-policy v0.1.0"),", which is compatible with ",(0,r.yg)("a",{parentName:"p",href:"https://semver.org/"},"Semantic Versioning 2.0.0"),"."),(0,r.yg)("h2",{id:"license"},"LICENSE"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/renovate-issue-action/blob/main/LICENSE"},"MIT")))}g.isMDXComponent=!0}}]);